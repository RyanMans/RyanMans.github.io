<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[AVFoundation学习笔记]]></title>
    <url>%2F2019%2F01%2F02%2FAVFoundation%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[AVFoundation学习笔记12345本博文内容:1. 实现二维码扫描2. 实现自定义相机拍照功能3. 实现图片捕捉功能4. 附加: 手电筒的打开 关闭 捕捉设备AVCaptureDevice为诸如摄像头或麦克风等物理设备定义了一个接口。针对物理设备定义了大量控制方法，包括对焦、白平衡、曝光等。最常用的方法是1+ (nullable AVCaptureDevice *)defaultDeviceWithMediaType:(AVMediaType)mediaType 捕捉会话 AVCaptureSession(媒体捕捉的核心类),用于连接输入输出的资源。捕捉会话有一个会话预设值，用于控制捕捉数据的格式和质量，默认为AVCaptureSessionPresentHigh 基础使用: 1备注: AVCaptureSession的开启和停止,在完全开启或完全结束之前都会阻塞线程, 因此这里必须放在后台线程中处理，否则，就会导致界面不响. 捕捉设备的输入在使用捕捉设备进行处理前，首先要添加一个输入设备，不过一个捕捉设备不能直接添加到AVCaptureSession，但可以将它封装到AVCaptureDeviceInput实例中来添加，使用-deviceInputWithDevice:error:方法 捕捉的输出AVCaptureOutput是一个抽象基类，用于为从捕捉会话得到的数据输入到目的地。应使用这个类的一些派生类如： 12341. AVCaptureStillImageOuptut 静态图片输出(拍照)2. AVCaptureMovieFileOutput 视频输出(视频录制)3. AVCaptureVideoDataOutput 视频数据输出(连拍,视频录制)4. AVCaptureAudioDataOutput:音频数据输出 捕捉预览AVCaptureVideoPreviewLayer可满足在捕捉时的实时预览，类似于AVPlayerLayer的角色，支持重力概念，可控制视频内容渲染和缩放、拉伸效果. 实现二维码扫描AVCaptureMetadataOutput 用于处理AVCaptureSession产生的定时元数据的捕获输出，继承自 AVCaptureOutput AVMetadataObjectType,元数据类型,主要如下: 遵从协议AVCaptureMetadataOutputObjectsDelegate 1- (void)captureOutput:(AVCaptureOutput *)output didOutputMetadataObjects:(NSArray&lt;__kindof AVMetadataObject *&gt; *)metadataObjects fromConnection:(AVCaptureConnection *)connection 基础代码如下: 自定义拍照基础方法: 实现连拍AVCaptureVideoDataOutput,原始视频帧，用于获取实时图像以及视频录制遵从协议:AVCaptureVideoDataOutputSampleBufferDelegate 12//AVCaptureVideoDataOutput获取实时图像，这个代理方法的回调频率很快，几乎与手机屏幕的刷新频率一样快- (void)captureOutput:(AVCaptureOutput *)captureOutput didOutputSampleBuffer:(CMSampleBufferRef)sampleBuffer fromConnection:(AVCaptureConnection *)connection; 基础方法: 完整项目输出Github地址: XKCaptureMetadataKit]]></content>
  </entry>
  <entry>
    <title><![CDATA[App 开发、推送、上架证书]]></title>
    <url>%2F2018%2F12%2F29%2FiOS-%E8%AF%81%E4%B9%A6%E7%AF%87%2F</url>
    <content type="text"><![CDATA[一. 前期准备12个人开发者或者企业开发者账号申请已有账号,则直接登录, 开发者中心 https://developer.apple.com/ 开发者中心页面: 二、证书申请 2.1 创建App ID 选择Identifiers下的All IDs，右侧显示了所有已创建的App ID,点击右上角“+”新建: 信息填写(生成id)1234567891011App ID Description: 填写容易辨识的名称(可用项目名称,不可用中文)App ID Suffix:(2种) 1.Explicit App ID(首选) : 精确型, Bundle ID需要填写和你的项目名称一模一样, 例如com.xk.movie 2.Wildcard App ID：通配型,bundle ID只需要填写前缀即可：com.artron.＊,这样只要是项目的Bundle Identifier的前缀和这个一样都可以使用 通常项目开发,都是使用第一种精确型,确保唯一匹配 App Services: 应用需要用到的服务,如果有使用推送功能,则需要勾选Push Notification. 可后期编辑时,再补充 2.2 创建Certificate证书2.2.1 创建证书请求文件1步骤: 电脑应用程序 -&gt; 使用工具 -&gt; 钥匙串访问 -&gt; 证书助理 -&gt; 从证书颁发机构请求证书 钥匙串工具 证书信息填写 12345电子邮箱地址: 可以随意填写邮箱地址(有效)常用名称: 容易辨识的名称(会显示到钥匙串), 可填写项目名称选择存储到磁盘,点击继续保存到桌面, 则会生成一个CertificateSigningRequest.certSigningRequest的证书请求文件 2.2.2 制作Certificate证书证书中心123Development: 开发证书 Production : 推送证书 APN : 推送证书每一个证书都需要单独创建,可使用同一个CertificateSigningRequest.certSigningRequest的证书请求文件 证书制作: 选择对应的APP ID 上传certSigningRequest的证书请求文件 123如果是发布到AppStore,就选Production下的App Store and Ad Hoc;上传好请求文件后,会生成生成一个ios_development.cer证书文件, 点击download, 双击安装到钥匙串中（如果安装不上，可以直接将证书文件拖拽到钥匙串访问的列表中） 2.3 制作 Provisioning Profile描述文件(PP证书)选择Provisioning Profiles下的All，右侧显示了所有已创建的profile,点击右上角“+”新建: 选择对应的APP ID 选择对应的证书 填写profile名称 12为你的描述证书起个名字,一般是项目名称,继续即可完成创建,然后下载到电脑,双击即可安装到Xcode中;到此,证书的申请基本完成 三、项目配置(Xcode)3.1 添加开发者账号 3.2 Xcode证书配置1Xcode target -&gt; General -&gt; Singning (勾选 Automatically manage signing) -&gt; 编译项目 四、项目打包(Xcode)12345678910111213141516 Xcode真机模式 -&gt; Product -&gt; Archive 打包 ``` ![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/9461CFC150434CF78F7521CEF4D0C783/1549)![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/510BB7D984A14A7B90F1BDE9D0CAD7B5/1552)##### 4.1 上传到App Store###### 直接在打包工具上传![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/9E832327566B4ED69EEFB414D30E27B6/1559)##### 4.2 导出ipa文件,使用Application Loader上传到App Store 打包工具 archive export -&gt; ipa文件(全部next,默认选中) -&gt; 生成ipa文件 Xcode (open Developer Tool) -&gt; Application Loader -&gt; 选中本地ipa文件上传 12345![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/9A326A969C2E4D869A19428773C1757F/1581)![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/CEDA7C8CD6B94615AAD67C830941BA6A/1580)![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/B0FF6A47814E4BA9BD395EAEB6AB6215/1579) 注意: 两种方式都需要耐心等待, 都是在验证ipa二进制数据, 所以会有点忙, 尽量在网络环境好的条件下上传1#### 五、App Store Connect 提交审核 ipa 文件上传成功后, 可在此区域查看到上传到项目版本, 以及处理状态12345678910![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/WEBRESOURCE836afe5098c96d2d045c3693bc086809/1601)#### 六、App Store Connect 基本信息填写##### 6.1 新建app ![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/8A8DFA4DE17A4146A56263874DE8E921/1610) 注意:套装id 和 SKU 都可以填写项目的bundleid, 和开发者中心的证书bundleid一致,且在应用创建后,这两个不可再更改123##### 6.2 App Information ![](https://upload-images.jianshu.io/upload_images/1928848-39f68aa263a559cc.png?imageMogr2/auto-orient/) Privacy Policy URL(隐私政策) : 可选项,可以不填写 Category(类别):选择你的应用的分类 Pricing and Availability: 选择价格信息即可 12345678910![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/39FE15FC78BF4AB3828359C018581D1D/1642)![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/A80D60A08B7A4B9C8F18DD0666505686/1638)![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/E80DD2D4F33B4C9E8A91B50D1D4F4B9F/1639)![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/37DF694A147446B5B34BD9FB0A446C84/1640)![](https://note.youdao.com/yws/public/resource/38dc19ea5dd9780888d7e6fbe37fa670/xmlnote/6744DC2AA6344D01AAAA21B0E6870FC3/1655) app预览和应用截图, 可以使用6.5英寸(1242 x 2688)和5.5英寸(1242 x 2208)的size App Icon : 像素为1024 x 1024的无圆角,无透明像素的图标 手机号码: 需要加+86 ,例如 +8613666666666 Demo Account:测试账号,如果你的应用需要登录,请提供一个开启了所有权限的测试账号 Notes: 其他你认为有必要告诉苹果的审核人员的信息可以写在这里; 注: 联系方式,姓名等信息尽可能真实, 要确保能够正常联系到, 已防止审核过程中出现问题, 苹果官方审核团队会致电通知 `]]></content>
      <categories>
        <category>Object-C</category>
      </categories>
      <tags>
        <tag>Object-C</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[重楼的博客]]></title>
    <url>%2F2018%2F12%2F27%2F%E9%87%8D%E6%A5%BC%E7%9A%84%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[简介大家好,我是重楼]]></content>
      <categories>
        <category>个人</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F27%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>实战经验</tag>
      </tags>
  </entry>
</search>
